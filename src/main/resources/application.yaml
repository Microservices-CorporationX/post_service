spring:
  config:
    import: classpath:application-minio.yaml

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: user
    password: password

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        format_sql: true

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml

  data:
    redis:
      port: 6379
      host: localhost
      channels:
        calculations_channel:
          name: calculations_channel
        user-ban-channel:
          name: user_ban
        comment-channel:
          name: comment_event_channel
        post_view_channel:
          name: post_view
        post-like-channel:
          name: post_like_event_channel
        post_channel:
          name: post_event_channel
      cache:
        user:
          ttl: 86400 #seconds
        post:
          ttl: 86400 #seconds
        comment:
          limit: 3
        news-feed:
          capacity: 500
          post-batch-size: 20
          user-heat-batch-size: 100
        optimistic-lock-retry:
          max-attempt: 5
          delay: 300 #milliseconds



  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 3
      acks: all
    consumer:
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: "news-feed"
    listener:
      ack-mode: manual
    topic:
      post-publisher: post_publisher
      like-publisher: like_publisher
      comment-publisher: comment_publisher
      view-publisher: view_publisher
      heat-feed-publisher: heat_feed_publisher
    batch-size:
      post-publisher: 100
    scheduler:
      view-send-message-cron: "0 * * * * *"


  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

server:
  port: 8081

logging:
  level:
    root: info
    org.apache.kafka: error

comment:
  banner:
    scheduler:
      cron: "00 01 06 * * *"

post:
  publisher:
    scheduler:
      cron: "0 0/1 * 1/1 * ?" # every minute
  ad-remover:
    scheduler:
      cron: "0 0/1 * 1/1 * ?" # every minute
  config:
    thread-pool:
      max-size: 10
    batch-size: 1000
  user_ban:
    scheduler:
      cron: "00 01 06 * * *"
  spell-corrector:
    scheduler:
      cron: "0 0/1 * 1/1 * ?" # every minute
    url: "https://speller.yandex.net/services/spellservice.json/checkText"

user-service:
  host: localhost
  port: 8080
  path: user-service

project-service:
  host: localhost
  port: 8082

payment-service:
  host: localhost
  port: 9080