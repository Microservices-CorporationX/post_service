spring:
  mvc:
    servlet:
      path: /api/v1
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: user
    password: password
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml

  data:
    redis:
      port: 6379
      host: localhost
      channel:
        album: album_channel
        user_ban: user_ban
        comment: comment_channel
        files-uploaded: files_uploaded_channel
    cache:
      type: redis
      global-minutes-ttl: 10
      feeds-hours-ttl: 24
      feeds-cache-name: feeds
      posts-hours-ttl: 24
      posts-cache-name: posts
      users-hours-ttl: 24
      users-cache-name: users

  kafka:
    bootstrap-servers: kafka:9092
    listener:
      ack-mode: record
    #      concurrency: 3
    consumer:
      group-id: news-feed-group-1
      auto-offset-reset: earliest
      enable-auto-commit: false
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.JsonSerializer
    template:
      default-topic: default-topic
    topics:
      post-topic-name: post
      post-replications-count: 1
      post-partitions-count: 3
      cache-user-topic-name: cache-user
      cache-user-replications-count: 1
      cache-user-partitions-count: 3
      like-topic-name: like
      like-replications-count: 1
      like-partitions-count: 3
      comment-topic-name: comment
      comment-replications-count: 1
      comment-partitions-count: 3
      post-views-topic-name: post
      post-views-replications-count: 1
      post-views-partitions-count: 3
    event-batch-size: 1000
#    retry:
#     backoff:
#       initial-interval: 1000
#       max-interval: 5000
#       multiplier: 2.0
#       retries: 3

server:
  port: 8081
  tomcat:
    basedir: /path/to/tomcat/directory
    max-http-header-size: 2097152

feed:
  quantity-posts-in-feed: 500

cron:
  update-cache: "0/15 * * * * ?"
  check-comments: "0 0 0 * * ?"
  unverified-posts: 0 47 16 * * ?

logging:
  level:
    root: info

user-service:
  host: localhost
  port: 8080
  path: /api/v1
project-service:
  host: localhost
  port: 8082
  path: /api/v1
payment-service:
  host: localhost
  port: 9080

post:
  unverified-posts-ban-count: 5
  publish-posts:
    batch-size: 1000
    scheduling:
      cron: "0 * * * * *"

amazonS3:
  endpoint: http://127.0.0.1:9000
  access-key: user
  secret-key: password
  bucket-name: corpbucket
  region: ap-southeast-2

file-upload:
  post:
    minimum-amount: 1
    maximum-amount: 10
    info-by-file-type:
      image:
        max-size: 5242880
        allowed-extensions:
          - jpg
          - jpeg
          - png
      video:
        max-size: 10485760
        allowed-extensions:
          - mp4
          - mkv
          - avi
          - mov
          - quicktime
      audio:
        max-size: 5242880
        allowed-extensions:
          - mp3
          - wav
          - ogg
          - mpeg
      another:
        max-size: 0
        allowed-extensions: [ ]
    image-size-limits:
      square:
        max-length: 1080
      rectangular:
        max-long-side-length: 1080
        max-short-side-length: 566

task-executor:
  file-upload:
    core-pool-size: 10
    max-pool-size: 20
    queue-capacity: 50
